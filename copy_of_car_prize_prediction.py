# -*- coding: utf-8 -*-
"""Copy of Car_prize_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1auKf-4IlUnm45NuKYBzft_Q7iC6y-URO

Import
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import OneHotEncoder
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.metrics import mean_absolute_error

"""Data load"""

data = pd.read_csv("/content/Book1.csv.csv")

print(data.head())

"""Data cleaning"""

X = data_cleaned[['year', 'kms_driven', 'fuel_type']]
y = data_cleaned['Price']

"""Testing

"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

"""Preprocessing"""

preprocessor = ColumnTransformer(
    transformers=[
        ('fuel', OneHotEncoder(), ['fuel_type'])
    ],
    remainder='passthrough'  # Keep other columns as they are
)

model = Pipeline(steps=[
    ('preprocessor', preprocessor),
    ('regressor', LinearRegression())
])

""" Train the mode"""

model.fit(X_train, y_train)

y_pred = model.predict(X_test)

mae = mean_absolute_error(y_test, y_pred)
print(f"Mean Absolute Error: {mae}")

"""Output

"""

example_car = pd.DataFrame({
    'year': [2015],
    'kms_driven': [30000],
    'fuel_type': ['Petrol']
})
predicted_price = model.predict(example_car)
print(f"Predicted Price for the example car: â‚¹{predicted_price[0]:,.2f}")